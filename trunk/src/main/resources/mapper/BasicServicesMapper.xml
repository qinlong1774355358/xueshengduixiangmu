<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wyfx.aw.dao.BasicServicesMapper">
  <resultMap id="BaseResultMap" type="com.wyfx.aw.entity.BasicServices">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="control_service_status" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="control_status" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="server_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.wyfx.aw.entity.BasicServices">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="control_service_status" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="control_status" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="server_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="note" javaType="java.lang.String" jdbcType="LONGVARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, control_service_status, control_status, server_id
  </sql>
  <sql id="Blob_Column_List">
    note
  </sql>




  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from basic_services
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectBasicServices" parameterType="com.wyfx.aw.entity.BasicServices" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from basic_services
    <where>
      <if test="id != null">
        id=#{id,jdbcType=INTEGER }
      </if>
      <if test="controlServiceStatus != null">
        and control_service_status=#{controlServiceStatus,jdbcType=INTEGER }
      </if>
      <if test="controlStatus != null">
        and control_status= #{controlStatus,jdbcType=INTEGER }
      </if>
      <if test="serverId != null">
        and server_id=#{serverId,jdbcType=INTEGER }
      </if>
      <if test="note != null">
        and note= #{note,jdbcType=LONGVARCHAR }
      </if>
    </where>
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from basic_services
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.wyfx.aw.entity.BasicServices">
    insert into basic_services (id, control_service_status, control_status, 
      server_id, note)
    values (#{id,jdbcType=INTEGER}, #{controlServiceStatus,jdbcType=INTEGER}, #{controlStatus,jdbcType=INTEGER}, 
      #{serverId,jdbcType=INTEGER}, #{note,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.wyfx.aw.entity.BasicServices">
    insert into basic_services
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="controlServiceStatus != null">
        control_service_status,
      </if>
      <if test="controlStatus != null">
        control_status,
      </if>
      <if test="serverId != null">
        server_id,
      </if>
      <if test="note != null">
        note,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="controlServiceStatus != null">
        #{controlServiceStatus,jdbcType=INTEGER},
      </if>
      <if test="controlStatus != null">
        #{controlStatus,jdbcType=INTEGER},
      </if>
      <if test="serverId != null">
        #{serverId,jdbcType=INTEGER},
      </if>
      <if test="note != null">
        #{note,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.wyfx.aw.entity.BasicServices">
    update basic_services
    <set>
      <if test="controlServiceStatus != null">
        control_service_status = #{controlServiceStatus,jdbcType=INTEGER},
      </if>
      <if test="controlStatus != null">
        control_status = #{controlStatus,jdbcType=INTEGER},
      </if>
      <if test="serverId != null">
        server_id = #{serverId,jdbcType=INTEGER},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.wyfx.aw.entity.BasicServices">
    update basic_services
    set control_service_status = #{controlServiceStatus,jdbcType=INTEGER},
      control_status = #{controlStatus,jdbcType=INTEGER},
      server_id = #{serverId,jdbcType=INTEGER},
      note = #{note,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wyfx.aw.entity.BasicServices">
    update basic_services
    set control_service_status = #{controlServiceStatus,jdbcType=INTEGER},
      control_status = #{controlStatus,jdbcType=INTEGER},
      server_id = #{serverId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateBasicServices" parameterType="com.wyfx.aw.entity.BasicServices">
    update basic_services
    set
    <trim suffixOverrides=",">
    <if test="id != null">
         id=#{id,jdbcType=INTEGER },
        </if>
      <if test="controlServiceStatus != null">
        control_service_status=#{controlServiceStatus,jdbcType=INTEGER },
      </if>
      <if test="controlStatus != null">
        control_status= #{controlStatus,jdbcType=INTEGER },
      </if>
      <if test="serverId != null">
         server_id=#{serverId,jdbcType=INTEGER },
      </if>
      <if test="note != null">
         note= #{note,jdbcType=LONGVARCHAR },
    </if>
    </trim>
    <where>
      <if test="id != null">
        id=#{id,jdbcType=INTEGER }
      </if>
    </where>
  </update>

</mapper>